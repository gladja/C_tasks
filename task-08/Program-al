#include<stack>
#include<iostream>
#include<string.h>
using namespace std;


stack<int> q1;
stack<char> q2;
int flag = 0;// проверка на пустоту числового стека
int flag2 = 0;// проверка для первого отрицательного числа 
int flag1 = 0;// деление на 0
void calculate(stack<int>&, char);
int symb(char);
void fun(char[]);

int main()
{
    char a[100];
    cout << "Enter arithmetic example\n\n";
    cin >> a;
    fun(a);
    return 0;
}

void calculate(stack<int>& q1, char s)
{
    int x, y, z;
    switch (s)
    {
        case '+':
            {
                x = q1.top();
                q1.pop();
                y = q1.top();
                q1.pop();
                z = x + y;
                q1.push(z);
                break;
            }
        case '-':
            {
                x = q1.top(); q1.pop();
                y = q1.top(); q1.pop();
                z = y - x;
                q1.push(z);
                break;
            }
        case '*':
            {
                x = q1.top(); q1.pop();
                y = q1.top(); q1.pop();
                z = x * y;
                q1.push(z);
                break;
            }
        case '/':
            {
                x = q1.top(); q1.pop();
                y = q1.top(); q1.pop();
                if (x == 0)
                {
                    flag1 = 1;
                    break;
                }
                z = y / x;
                q1.push(z);
                break;
            }
    }

}

int symb(char s)
{
    if (s == '+' || s == '-')
        return 1;
    if (s == '*' || s == '/')
        return 2;
    if (s == '#')
        return -1;
}

void fun(char a[100])
{
    q2.push('#');
    int len = strlen(a);
    if (a[0] == '-')
    {
        flag2 = 1;
        a[0] = '0';
    }
    for (int i = 0; i < len; i++)
    {
        if (a[i] >= '0' && a[i] <= '9')
        {
            int num = 0;
            while (a[i] >= '0' && a[i] <= '9')
            {
                num *= 10;
                num += (a[i] - '0');
                i++;
            }
            i--;
            if (flag2 == 1 && flag == 0)
                num *= -1;
            q1.push(num);
            flag = 1;
        }
        else
        {
            if (a[i] == '+' || a[i] == '-')
            {
                if ((symb(q2.top()) >= symb(a[i])))
                {
                    while (symb(q2.top()) >= symb(a[i]))
                    {
                        calculate(q1, q2.top());
                        q2.pop();
                    }
                    q2.push(a[i]);
                }
                else q2.push(a[i]);
            }
            else if (a[i] == '*' || a[i] == '/')
            {
                if (symb(q2.top()) == symb(a[i]))
                {
                    calculate(q1, q2.top());
                    if (flag1 == 1)
                    {
                        cout << "error";  //деление на 0 
                        return;
                    }
                    q2.pop();
                    q2.push(a[i]);
                }
                else q2.push(a[i]);
            }
        }
    }
    while (q2.top() != '#')
    {
        calculate(q1, q2.top());
        if (flag1 == 1)
        {
            cout << "error";  //деление на 0 

            return;
        }
        q2.pop();
    }
    cout << "\n =" << q1.top();
}
