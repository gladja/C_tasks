// Задана строка, содержащая арифметическое выражение, состоящее из целых
// чисел и знаков операций (бинарных): +, -, *, / (без скобок). Проверить корректность
// выражения (последовательность чисел и знаков операций). В случае корректности вычислить
// значение с учетом приоритетов операций.

using System;
using System.Text;
using System.Collections.Generic;

public class Test
{

    static void Result(string data)
    {
        StringBuilder text = new StringBuilder(data);
        List<double> list = new List<double>();
        Stack<double> val = new Stack<double>();
        // int b = 0;
        // string result = "";
        for (int i = 0; i < text.Length; i++)
        {
            // Console.Write($"{data[i]} ");
            list.Add(text[i] - 48);

            if (text[i] == '*')
            {
                double a = text[i - 1] - 48;
                double b = text[i + 1] - 48;
                double res = a * b;
                // val.Push(res);
                list.Add(res);
                // char text = (char)res;
                // data.Remove(a, 2);

                Console.WriteLine(i);
                text.Remove(i - 1, 3).Insert(i - 1, $"{res}");
                // result = data.Insert(a, "4");
                i = 0;
                // break;
            }
        }
        // Console.WriteLine((char)a);
        // Console.WriteLine((char)a);
        Console.WriteLine(text);
        Console.WriteLine(list);
        // foreach (var va in val)
        // {
        //     Console.WriteLine(va);
        // }

        for (int i = 0; i < list.Count; i++)
        {
            Console.Write($"{list[i]} ");
        }

    }


    static void Main(string[] args)

    {
        // string example = Console.ReadLine().Trim().Replace(" ", "");
        string example = Console.ReadLine().Trim().Replace(" ", "");

        Result(example);
    }

}


