// Задана строка, содержащая арифметическое выражение, состоящее из целых
// чисел и знаков операций (бинарных): +, -, *, / (без скобок). Проверить корректность
// выражения (последовательность чисел и знаков операций). В случае корректности вычислить
// значение с учетом приоритетов операций.

using System;
using System.Text;
using System.Collections.Generic;

public class Test
{

    static void Result(string data)
    {
        StringBuilder text = new StringBuilder(data);
        List<double> list = new List<double>();
        Stack<double> val = new Stack<double>();

        // string[] ar = data.Trim().Split().Replace("-", " ").Replace("+", " ").Replace("*", " ").Replace("/", " ");
        // int[] arr = new int[ar.Length];
        // for (int i = 0; i < arr.Length; i++)
        // {
        //     arr[i] = Int32.Parse(ar[i]);
        // }
        // int b = 0;
        // string result = "";
        for (int i = 0; i < text.Length; i++)
        {
            if (text[i] == '+' || text[i] == '-' || text[i] == '*' || text[i] == '/')
            {
                text.Remove(i, 1).Insert(i, " ");
            }
        }
        string[] arr = text.Trim().Split()
        int[] arr = new int[ar.Length];
        // Console.WriteLine((char)a);
        // Console.WriteLine((char)a);
        Console.WriteLine(text);
        // Console.WriteLine(list);
        // foreach (var va in val)
        // {
        //     Console.WriteLine(va);
        // }

        // for (int i = 0; i < arr.Length; i++)
        // {
        //     Console.Write($"{arr[i]} ");
        // }

    }


    static void Main(string[] args)

    {
        // string example = Console.ReadLine().Trim().Replace(" ", "");
        string example = Console.ReadLine().Trim().Replace(" ", "");

        Result(example);
    }

}


